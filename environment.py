import numpy as np
from config import *

# Modeling the indoor environment, including temperature, humidity and carbon dioxide concentration.

class EnvironmentModel:
    def temperature_ode(self, T_air, Chi_air, Chi_crop, T_out):
        # Q_cov: Heat transfer via convection between the air and the outside environment, in Watts.
        Q_cov = alpha_cov*(T_air - T_out)
        
        # Q_trans: Heat transfer due to crop transpiration.
        Q_trans = g_e*L*(Chi_crop - Chi_air)

        # Q_lamp: Heat generated by lamps.
        # Q_lamp = eta*P_E*f_on/100

        return (1/c_cap)*(-Q_cov-Q_trans) # + Q_lamp

    def humidity_ode(self):
        return 0
    
    def co2_ode(self):
        return 0

    def env_conditions(self, env_state, crop_state, climate):
        # State parameters
        T_air, Chi_air, CO2_air = env_state
        Chi_crop, Photo_crop = crop_state

        # Varying parameters
        T_out, Chi_out = climate

        dT_air_dt = self.temperature_ode(T_air, Chi_air, Chi_crop, T_out)
        dChi_air_dt = self.humidity_ode()
        dCO2_air_dt = self.co2_ode()
        return np.array([dT_air_dt, dChi_air_dt, dCO2_air_dt])
